@model FilRouge_Test_CodeFirst.Data.Entity.Question

@using static FilRouge_Test_CodeFirst.Models.QuestionViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Question</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="QuestionId" />
            <div class="form-group">
                <label asp-for="ContentQuestion" class="control-label"></label>
                <input asp-for="ContentQuestion" class="form-control" />
                <span asp-validation-for="ContentQuestion" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="@Model.AnswerChoice">
            @foreach (var rep in Model.AnswerChoice)
            {

                <div class="form-group">
                    <input type="hidden" asp-for="@rep.CorrectionId" />

                    <label asp-for="@rep.ContentCorection" class="control-label"> Choix :</label>
                    <input asp-for="@rep.ContentCorection" class="form-control" />
                    <input asp-for="@rep.IsCorrect" class="form-controle" />
                    <span asp-validation-for="@rep.ContentCorection" class="text-danger"></span>

                </div>
            }

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
